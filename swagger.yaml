tags:
- name: users
  description: users API
- name: user_auth
  description: user authentications API

paths:
# [POST] User sign up
  /signup:
    post:
      tags:
      - user_auth
      summary: Signup a user
      description: Signup a user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: User object
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: User object
          schema:
            $ref: '#/definitions/users'
        400:
          description: Bad request
        500:
          description: Internal server error

# [POST] User login
  /login:
    post:
      tags:
      - user_auth
      summary: Login a authentication
      description: Login a authentication
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: User object
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: User object
          schema:
            $ref: '#/definitions/users'
        400:
          description: Bad request
        500:
          description: Internal server error

# [POST] User logout
  /logout:
    post:
      tags:
      - user_auth
      summary: Logout a authenticated user
      description: Logout a authenticated user
      produces:
      - application/json
      responses:
        200:
          description: User object
          schema:
            $ref: '#/definitions/users'
        400:
          description: Bad request
        500:
          description: Internal server error

# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
        - username
        - password
    properties:
      username:
        type: string
        description: user Username
      password:
        type: string
        description: user Password

schemes:
  - https
  - http
